openapi: '3.0.0'
info:
  version: 1.0.0
  title: BlogPosts server application 
  description: This is the server for the application of posts
  termsOfService: http://swagger.io/terms/
servers:
  - url: /localhost:3001
tags:
- name: "Posts"
paths:
  /posts:
    get:
      tags:
      - "Posts"
      description: Get all the posts.
      operationId: getAllPosts
      responses:
        '200':
          description: message response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/posts'
        '404':
          description: error getting the posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /posts/{post_id}:
    get:
      tags:
      - "Posts"
      description: Get a single post
      operationId: getSinglePost
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the post
      responses:
        '200':
          description: message response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post'
        '400':
          description: bad parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: error getting the posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  
  
components:
  schemas:
    posts: 
        type: object
        required:
            - status
            - message
            - results
            - totalresults
        properties:
            status:
                type: string
            message:
                type: string
            results:
                type: array
                items:
                  type: object
            totalresults:
                type: integer
                format: int64
    post: 
        type: object
        required:
            - title
            - author
            - comments
        properties:
            title:
                type: string
            author:
                type: string
            comments:
                type: array
                items:
                  type: string

    createComment:
      type: object
      required:
        - text
      properties:
        text:
          type: string

    Error:
      type: object
      required:
        - statuscode
        - message
      properties:
        statuscode:
            type: integer
            format: int64
        message:
          type: string

